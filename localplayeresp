local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- Create a highlight template and store it in ReplicatedStorage
local highlightTemplate = Instance.new("Highlight")
highlightTemplate.FillColor = Color3.new(1, 0, 0) -- Starting color (red)
highlightTemplate.OutlineColor = Color3.new(0, 0, 0) -- Outline color (black)
highlightTemplate.Name = "PlayerHighlight"
highlightTemplate.Parent = ReplicatedStorage

-- Function to format numbers with suffixes
function format_number(number)
    local suffixes = {"", "K", "M", "B", "T", "QD"}
    local suffix_index = 1

    while math.abs(number) >= 1000 and suffix_index < #suffixes do
        number = number / 1000.0
        suffix_index = suffix_index + 1
    end

    return string.format("%.2f%s", number, suffixes[suffix_index])
end

-- Function to attach GUI and highlight to the player's character
local function attachHighlightAndGUI(character)
    -- Wait for the character's Head to load
    local head = character:WaitForChild("Head")

    -- Create a BillboardGui for the display name and stats
    local billboardGui = head:FindFirstChild("BillboardGui") or Instance.new("BillboardGui")
    billboardGui.Parent = head
    billboardGui.Size = UDim2.new(0, 200, 0, 50)
    billboardGui.StudsOffset = Vector3.new(0, 2, 0)
    billboardGui.Adornee = head
    billboardGui.AlwaysOnTop = true

    -- Create or update the TextLabel for username and stats
    local usernameLabel = billboardGui:FindFirstChild("UsernameLabel") or Instance.new("TextLabel")
    usernameLabel.Name = "UsernameLabel"
    usernameLabel.Parent = billboardGui
    usernameLabel.Size = UDim2.new(1, 0, 1, 0)
    usernameLabel.BackgroundTransparency = 1
    usernameLabel.TextColor3 = Color3.new(1, 1, 1)
    usernameLabel.TextScaled = false
    usernameLabel.TextSize = 20
    usernameLabel.TextWrapped = false

    -- Fetch player stats from ReplicatedStorage
    local playerStats = ReplicatedStorage:FindFirstChild("Datas"):FindFirstChild(tostring(player.UserId))
    local totalStats = math.huge
    local rebirths = 0
    local ownerTag = ""

    if playerStats then
        -- Fetch stats like Rebirth, Strength, Defense, Energy, Speed
        rebirths = playerStats:FindFirstChild("Rebirth") and playerStats.Rebirth.Value or 0
        local strengthStat = playerStats:FindFirstChild("Strength") and playerStats.Strength.Value or math.huge
        local defenceStat = playerStats:FindFirstChild("Defense") and playerStats.Defense.Value or math.huge
        local energyStat = playerStats:FindFirstChild("Energy") and playerStats.Energy.Value or math.huge
        local speedStat = playerStats:FindFirstChild("Speed") and playerStats.Speed.Value or math.huge

        -- Calculate total stats (minimum of all stats)
        totalStats = math.min(strengthStat, defenceStat, energyStat, speedStat)

        -- Owner tag logic
        if player.Name == "Steve72009" or player.Name == "Pserson2" or player.Name == "whowhatwhen1230" then
            ownerTag = " || Script Creator"
            usernameLabel.Font = Enum.Font.SpecialElite
        else
            usernameLabel.Font = Enum.Font.Cartoon
        end

        -- Set the display text with formatted stats and rebirths
        usernameLabel.Text = string.format("%s || %s, %d%s", player.DisplayName, format_number(totalStats), rebirths, ownerTag)
    else
        -- Fallback to just the display name
        usernameLabel.Text = player.DisplayName
    end

    usernameLabel.TextStrokeTransparency = .01

    -- Create a highlight for the character if it doesn't exist
    local highlight = character:FindFirstChild("PlayerHighlight") or highlightTemplate:Clone()
    highlight.Parent = character
    highlight.Adornee = character
    highlight.FillColor = Color3.new(0, 1, 0) -- Example color (green)

    -- Update GUI and highlight colors dynamically based on total stats
    -- Add your own custom logic here if needed
end

-- Listen for when the player's character is added (or respawns)
player.CharacterAdded:Connect(function(character)
    -- Attach GUI and highlight on respawn
    attachHighlightAndGUI(character)
end)

-- If the player's character already exists (in case of joining mid-game), apply GUI
if player.Character then
    attachHighlightAndGUI(player.Character)
end
